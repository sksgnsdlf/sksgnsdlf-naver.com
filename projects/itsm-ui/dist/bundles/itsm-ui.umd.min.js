!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common"),require("@ng-bootstrap/ng-bootstrap")):"function"==typeof define&&define.amd?define("itsm-ui",["exports","@angular/core","@angular/forms","@angular/common","@ng-bootstrap/ng-bootstrap"],t):t(e["itsm-ui"]={},e.ng.core,e.ng.forms,e.ng.common,null)}(this,function(e,n,r,i,o){"use strict";var l=function(){return e=Object.assign||function e(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},e.apply(this,arguments)};function b(e){var t="function"==typeof Symbol&&e[Symbol.iterator],n=0;return t?t.call(e):{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}function s(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,o=n.call(e),l=[];try{for(;(void 0===t||0<t--)&&!(r=o.next()).done;)l.push(r.value)}catch(s){i={error:s}}finally{try{r&&!r.done&&(n=o["return"])&&n.call(o)}finally{if(i)throw i.error}}return l}function a(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(s(arguments[t]));return e}var c=function(){function e(){this.title=null,this.checkbox=!1,this.data=[],this.OnClick=new n.EventEmitter,this.OrgChanged=new n.EventEmitter,this.fillterd=[]}return e.prototype.ngOnInit=function(){},e.prototype.toggleFolder=function(e){e.sub&&e.sub.length&&(e.expanded=!e.expanded),this.OnClick.emit(e)},e.prototype.getSelection=function(){var e,t,n,r,i,o,l=[];try{for(var s=b(this.data),a=s.next();!a.done;a=s.next()){var c=a.value;if(c.selected)l.push(c);else try{for(var u=b(c.sub),d=u.next();!d.done;d=u.next()){var p=d.value;if(p.selected)l.push(p);else try{for(var f=b(p.sub),h=f.next();!h.done;h=f.next()){var g=h.value;g.selected&&l.push(g)}}catch(y){i={error:y}}finally{try{h&&!h.done&&(o=f["return"])&&o.call(f)}finally{if(i)throw i.error}}}}catch(v){n={error:v}}finally{try{d&&!d.done&&(r=u["return"])&&r.call(u)}finally{if(n)throw n.error}}}}catch(m){e={error:m}}finally{try{a&&!a.done&&(t=s["return"])&&t.call(s)}finally{if(e)throw e.error}}return l},e.prototype.search=function(e){if(e){var t,n,r,i,o,l,s=[];try{for(var a=b(this.data),c=a.next();!c.done;c=a.next()){var u=c.value;if(u.name.includes(e))s.push(u);else try{for(var d=b(u.sub),p=d.next();!p.done;p=d.next()){var f=p.value;if(f.name.includes(e))s.push(f);else try{for(var h=b(f.sub),g=h.next();!g.done;g=h.next()){var y=g.value;y.name.includes(e)&&s.push(y)}}catch(v){o={error:v}}finally{try{g&&!g.done&&(l=h["return"])&&l.call(h)}finally{if(o)throw o.error}}}}catch(m){r={error:m}}finally{try{p&&!p.done&&(i=d["return"])&&i.call(d)}finally{if(r)throw r.error}}}}catch(x){t={error:x}}finally{try{c&&!c.done&&(n=a["return"])&&n.call(a)}finally{if(t)throw t.error}}this.fillterd=s}},e.decorators=[{type:n.Component,args:[{selector:"itsm-tree-view",template:'  \x3c!-- Card --\x3e\n  <div class="card">\n      <div class="card-body">\n          <h4 class="card-title" *ngIf="title">{{title}}</h4>\n          <div class="card-text">\n            <ng-content></ng-content>\n            <input class="form-control search" type="text" placeholder="검색" [(ngModel)]="q" (keyup)="search(q);">\n            <ul class="level1" [hidden]="q">\n              <li *ngFor="let level1 of data" [ngClass]="{ sub: level1.sub?.length, on: level1.expanded, off: !level1.expanded }">\n                <input *ngIf="checkbox&&!level1.sub?.length" type="checkbox" [(ngModel)]="level1.selected">\n                <a (click)="toggleFolder(level1)">{{level1.name}}</a>\n                <ul class="level2" *ngIf="level1.expanded&&level1.sub?.length">\n                  <li *ngFor="let level2 of level1.sub" [ngClass]="{ sub: level2.sub?.length, on: level2.expanded, off: !level2.expanded }">\n                    <input *ngIf="checkbox&&!level2.sub?.length" type="checkbox" [(ngModel)]="level2.selected">\t\n                    <a (click)="toggleFolder(level2)">{{level2.name}}</a>\n                    <ul class="level3" *ngIf="level2.expanded&&level2.sub?.length">\n                      <li *ngFor="let level3 of level2.sub">\n                        <input *ngIf="checkbox" type="checkbox" [(ngModel)]="level3.selected">\n                        <a (click)="toggleFolder(level3)">{{level3.name}}</a>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              </li>\n            </ul>\n            <ul class="dep1" *ngIf="q && fillterd">\n              <li *ngFor="let item of fillterd"><a (click)="OnClick.emit(item)">{{item.name}}</a></li>\n            </ul>\n          </div>\n      </div>\n  </div>\n  \x3c!-- Card --\x3e',styles:[".card{width:100%;font-size:1em}.card input.search{margin-bottom:20px}.card ul{padding-left:10px;list-style:none}.card ul.level1{max-height:500px;overflow-y:auto}.card ul ul{margin-top:5px}.card ul li{cursor:pointer;padding:2px 0;color:gray}.card ul li:hover{color:#53a3ff}.card ul li.sub{padding-left:20px;background:url(../../../assets/images/folder_off.png) 3px 6px no-repeat}.card ul li.on{background:url(../../../assets/images/folder_on.png) 3px 6px no-repeat}.card ul li input{margin-right:5px}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={title:[{type:n.Input}],checkbox:[{type:n.Input}],data:[{type:n.Input}],OnClick:[{type:n.Output}],OrgChanged:[{type:n.Output}]},e}(),u=function(){function e(e){this._iterableDiffers=e,this.title="",this.header=[],this.impure=!1,this.src=[],this.srcChange=new n.EventEmitter,this.dest=[],this.destChange=new n.EventEmitter,this.iterableDiffer=this._iterableDiffers.find([]).create(null)}return e.prototype.ngOnInit=function(){},e.prototype.ngDoCheck=function(){this.iterableDiffer.diff(this.src)&&this.srcChange.emit(this.src),this.iterableDiffer.diff(this.dest)&&this.destChange.emit(this.dest)},e.prototype.selectAll=function(e,t){e.forEach(function(e){e.selected=t})},e.prototype.add=function(){var e,t;this.impure?((e=this.dest).push.apply(e,a(this.src.filter(function(e){return e.selected}).map(function(e){return l({},e)}))),this.src=this.src.filter(function(e){return!e.selected})):(t=this.dest).push.apply(t,a(this.src.filter(function(e){return e.selected}).map(function(e){return l({},e)})))},e.prototype.remove=function(){var e;this.impure?((e=this.src).push.apply(e,a(this.dest.filter(function(e){return e.selected}).map(function(e){return l({},e)}))),this.dest=this.dest.filter(function(e){return!e.selected})):this.dest=this.dest.filter(function(e){return!e.selected}).map(function(e){return l({},e)})},e.decorators=[{type:n.Component,args:[{selector:"itsm-multi-select",template:'\n<div class="row">\n  <div class="col">\n    \x3c!-- Card --\x3e\n    <div class="card">\n      <div class="card-body">\n          <h4 class="card-title" *ngIf="title">{{title}}</h4>\n          <div class="card-text">\n            <ng-content select="[filter=dest]"></ng-content>\n            <table class="table">\n              <thead>\n                <th><input type="checkbox" (change)="selectAll(dest, $event.target.checked)"></th>\n                <th *ngFor="let item of header">{{item.name}}</th>\n              </thead>\n              <tbody>\n                <tr *ngFor="let item of dest">\n                  <td><input type="checkbox" [(ngModel)]="item.selected"></td>\n                  <td *ngFor="let _ of header">{{item[_.key]}}</td>\n                </tr>\n              </tbody>\n            </table>\n            <ng-content select="ngb-pagination[pagination=dest]"></ng-content>\n          </div>\n      </div>\n    </div>\n    \x3c!-- Card --\x3e\n  </div>\n  <div class="col shrink">\n    <img (click)="add()" src="assets/images/arr_left_btn.gif" alt="">\n    <img (click)="remove()" src="assets/images/arr_right_btn.gif" alt="">\n  </div>\n  <div class="col">\n    \x3c!-- Card --\x3e\n    <div class="card">\n        <div class="card-body">\n            <div class="card-text">\n              <ng-content select="[filter=src]"></ng-content>\n              <table class="table">\n                <thead>\n                  <th><input type="checkbox" (change)="selectAll(src, $event.target.checked)"></th>\n                  <th *ngFor="let item of header">{{item.name}}</th>\n                </thead>\n                <tbody>\n                  <tr *ngFor="let item of src">\n                    <td><input type="checkbox" [(ngModel)]="item.selected"></td>\n                    <td *ngFor="let _ of header">{{item[_.key]}}</td>\n                  </tr>\n                </tbody>\n              </table>\n              <ng-content select="ngb-pagination[pagination=src]"></ng-content>\n            </div>\n        </div>\n      </div>\n      \x3c!-- Card --\x3e\n  </div>\n</div>',styles:[".col{display:flex;align-items:stretch}.col .card{width:100%}.shrink{flex-grow:0;display:flex;justify-content:center;flex-flow:column}.shrink img{margin-bottom:5px}thead{background:#f4f4f4}thead th:first-of-type{width:1%}"]}]}],e.ctorParameters=function(){return[{type:n.IterableDiffers}]},e.propDecorators={title:[{type:n.Input}],header:[{type:n.Input}],impure:[{type:n.Input}],src:[{type:n.Input}],srcChange:[{type:n.Output}],dest:[{type:n.Input}],destChange:[{type:n.Output}]},e}(),d={contentsCss:[""],customConfig:""},t={provide:r.NG_VALUE_ACCESSOR,useExisting:n.forwardRef(function(){return p}),multi:!0},p=function(){function e(e,t){this.ngZone=e,this.moduleConfig=t,this.innerValue="",this.interval=null,this.readonly=!1,this.config={},this.skin="moono-lisa",this.language="ko",this.fullPage=!1,this.onLoad=new n.EventEmitter}return e.prototype.onChange=function(e){},e.prototype.onTouched=function(){},e.prototype.ngOnInit=function(){},e.prototype.ngOnChanges=function(e){this.ckIns&&e.readonly&&this.ckIns.setReadOnly(this.readonly)},e.prototype.getContent=function(){return this.ckIns.getData()},e.prototype.ngOnDestroy=function(){this.ckIns&&(this.ckIns.removeAllListeners(),CKEDITOR.instances[this.ckIns.name].destroy(),this.ckIns.destroy(),this.ckIns=null,clearInterval(this.interval))},e.prototype.ngAfterViewInit=function(){this.initCKEditor()},e.prototype.initCKEditor=function(){var t=this;if("undefined"==typeof CKEDITOR)return console.warn("CKEditor 4.x is missing (http://ckeditor.com/)");var e=Object.assign({},d,this.config,{readOnly:this.readonly,skin:this.skin,language:this.language,fullPage:this.fullPage,filebrowserUploadUrl:this.moduleConfig.CKEDITOR_UPLOAD_URI});this.ckIns=CKEDITOR.replace(this.ck.nativeElement,e),this.ckIns.setData(this.innerValue),setTimeout(function(e){t.onLoad.emit()},200),this.interval=setInterval(function(){t.ngZone.run(function(){t.innerValue=t.ckIns.getData(),t.onChange(t.ckIns.getData()),t.onTouched()})},500)},e.prototype.updateValue=function(e){var t=this;this.ngZone.run(function(){t.innerValue=e,t.onChange(e),t.onTouched()})},e.prototype.writeValue=function(e){if(this.innerValue=e||"",this.ckIns){this.ckIns.setData(this.innerValue);var t=this.ckIns.getData();this.ckIns.setData(t)}},e.prototype.registerOnChange=function(e){this.onChange=e},e.prototype.registerOnTouched=function(e){this.onTouched=e},e.prototype.setDisabledState=function(e){},e.decorators=[{type:n.Component,args:[{selector:"itsm-ckeditor",template:"<textarea #ck></textarea>",providers:[t]}]}],e.ctorParameters=function(){return[{type:n.NgZone},{type:undefined,decorators:[{type:n.Inject,args:["config"]}]}]},e.propDecorators={readonly:[{type:n.Input}],config:[{type:n.Input}],skin:[{type:n.Input}],language:[{type:n.Input}],fullPage:[{type:n.Input}],onLoad:[{type:n.Output}],ck:[{type:n.ViewChild,args:["ck"]}]},e}(),f=function(){function t(){}return t.forRoot=function(e){return{ngModule:t,providers:[{provide:"config",useValue:e}]}},t.decorators=[{type:n.NgModule,args:[{imports:[i.CommonModule,r.FormsModule,o.NgbModule],declarations:[c,u,p],exports:[c,u,p]}]}],t}();e.TreeViewComponent=c,e.MultiSelectComponent=u,e.CKEDITOR_VALUE_ACCESSOR=t,e.CKEditorComponent=p,e.ItsmUiModule=f,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=itsm-ui.umd.min.js.map